#!/bin/bash

. /start-utils

shopt -s nullglob

#umask 002
if ! touch /data/.verify_access; then
  log "ERROR: /data doesn't seem to be writable. Please make sure attached directory is writable by uid=$(id -u)"
  exit 2
fi

rm /data/.verify_access || true

cd /data || exit 1

set -o pipefail

if [[ -z $VS_VERSION ]]; then
  log "Environment variable VS_VERSION not set."
  log "Set VS_VERSION to the version name of the VintageStory server."
  exit 2
fi

SERVER_PACKAGE="vs_server_$VS_VERSION.tar.gz"
SERVER_PATH="/data/server/VintagestoryServer.exe"
SERVER="VintagestoryServer.exe"

if [ ! -e $SERVER_PATH ]; then
  log "Downloading VintageStory server version $VS_VERSION..."
  serverDownloadUrl="https://cdn.vintagestory.at/gamefiles/stable/$SERVER_PACKAGE"

  curl -fsSL -o "$SERVER_PACKAGE" "$serverDownloadUrl"
  result=$?
  if [ $result != 0 ]; then
    log "ERROR failed to download server from $serverDownloadUrl ($result)"
    exit 1
  fi

  log "Download finished."

  mkdir -p /data/server
  tar -zxf "$SERVER_PACKAGE" --directory /data/server
  rm "$SERVER_PACKAGE"
fi

SERVER_CONFIG="/data/data/serverconfig.json"

if [ ! -e "$SERVER_CONFIG" ]; then
  mkdir -p /data/data
  cp /tmp/serverconfig.json "$SERVER_CONFIG"
fi

jq --arg SERVER_NAME "$SERVER_NAME" '.ServerName = $SERVER_NAME' "$SERVER_CONFIG" >tmp.$$.json && mv tmp.$$.json "$SERVER_CONFIG"
jq --arg SERVER_PORT "$SERVER_PORT" '.Port = $SERVER_PORT' "$SERVER_CONFIG" >tmp.$$.json && mv tmp.$$.json "$SERVER_CONFIG"

cd /data/server || exit 1
exec mono $SERVER --dataPath /data/data
